// arrays de arrays.cpp : Defines the entry point for the console application.

//

#include "stdafx.h"
#include <iostream>
#include "conio.h"
#define MAX 10

using namespace std;

struct MatV{
	int subvec[MAX];
};

void cargar ( MatV A[MAX][MAX], int orden, int n);
void burbuja (MatV A[MAX][MAX], int orden, int n);
void mostrar (MatV A[MAX][MAX], int orden, int n);

void main()
{
	int orden,n;
	MatV A[MAX][MAX];
	do{

		cout<<"Ingrese el orden de su matriz (orden x orden): "<<endl;
		cin>>orden;
	}while ( orden<1 || orden>MAX);
	do{
		cout<<"Ingrese el tamanho del vector: "<<endl;
		cin>>n;
	}while(n<1 || orden>MAX);
	 cargar (  A,  orden, n);
	 burbuja ( A,  orden, n);
	 cout<<"LA MATRIZ ORDENADA SERA: "<<endl;
	 mostrar ( A,  orden, n);
	 getch();
}

void cargar ( MatV A[MAX][MAX], int orden, int n)
{
	for(int i=0; i<orden; i++)
		for (int j=0; j<orden; j++)
			for( int k=0; k<n; k++)
			{
				cout<<"A["<<i<<"] ["<<j<<"].["<<k<<"]: ";
				cin>>A[i][j].subvec[k];
			}
}
void burbuja (MatV A[MAX][MAX], int orden, int n)
{
	int aux;
	for(int i=0; i<orden; i++)
		for (int j=0; j<orden; j++)
			for( int k=0; k<(n-1); k++)
				for (int l=k+1; l<n; l++)
				{
					if(  (A[i][j].subvec[k])>(A[i][j].subvec[l]) )
					{
						aux=(A[i][j].subvec[l]);
						(A[i][j].subvec[l])=(A[i][j].subvec[k]);
						(A[i][j].subvec[k])=aux;
					}
				}
}
void mostrar (MatV A[MAX][MAX], int orden, int n)
{
	for(int i=0; i<orden; i++)
		for (int j=0; j<orden; j++)
			for( int k=0; k<n; k++)
			{
				cout<<"A["<<i<<"] ["<<j<<"].["<<k<<"]: "<<A[i][j].subvec[k]<<endl;
			}
}
